#!/usr/bin/env python
PACKAGE = "demo3"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("linear_vel", double_t, 0, "Linear velocity of the robot", 0.2, 0, 2.0)
gen.add("Kp", double_t, 0, "Proportional constant", 0.002, 0, 0.1)
gen.add("Kd", double_t, 0, "Diffrential constant", 0.001, 0, 0.1)
gen.add("Ki", double_t, 0, "Integral constant", 0.0, 0, 0.1)

gen.add("white_max_h", double_t, 0, "White hue upper bound of hue", 250, 0, 360)
gen.add("white_max_s", double_t, 0, "White hue upper bound of saturation", 60, 0, 360)
gen.add("white_max_v", double_t, 0, "White hue upper bound of value", 256, 0, 360)

gen.add("white_min_h", double_t, 0, "White hue lower bound of hue", 0, 0, 360)
gen.add("white_min_s", double_t, 0, "White hue lower bound of saturation", 0, 0, 360)
gen.add("white_min_v", double_t, 0, "White hue lower bound of value", 230, 0, 360)

gen.add("red_max_h", double_t, 0, "Red hue upper bound of hue", 360, 0, 360)
gen.add("red_max_s", double_t, 0, "Red hue upper bound of saturation", 256, 0, 360)
gen.add("red_max_v", double_t, 0, "Red hue upper bound of value", 225, 0, 360)

gen.add("red_min_h", double_t, 0, "Red hue lower bound of hue", 150, 0, 360)
gen.add("red_min_s", double_t, 0, "Red hue lower bound of saturation", 150, 0, 360)
gen.add("red_min_v", double_t, 0, "Red hue lower bound of value", 80, 0, 360)

gen.add("Kp", double_t, 0, "Proportional constant", 0.00067, 0, 0.1)
gen.add("Kd", double_t, 0, "Diffrential constant", 0.001, 0, 0.1)
gen.add("Ki", double_t, 0, "Integral constant", 0.0, 0, 0.1)

exit(gen.generate(PACKAGE, "demo3", "Demo3"))